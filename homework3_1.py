# 1)))) Задайте список из нескольких чисел. Напишите программу, которая найдёт сумму элементов списка, стоящих на нечётной позиции.

# Пример:

# - [2, 3, 5, 9, 3] -> на нечётных позициях элементы 3 и 9, ответ:

# x = [2, 3, 5, 9, 3, 7, 5, 5, 5]
# l = x[1::2]
# print(sum(l))

# 2))) Напишите программу, которая найдёт произведение пар чисел списка. Парой считаем первый и последний элемент, второй и предпоследний и т.д.

# Пример:

# - [2, 3, 4, 5, 6] => [12, 15, 16];
# - [2, 3, 5, 6] => [12, 15]


# x = [21, 3, 4, 5, 6, 7, 8]
# result = []
# index = 0
# while index < len(x)/2:
#     index_2 = (index+1)*-1
#     result.append(x[index]*x[index_2])
#     index += 1
# print(result)


# ------------------------------------------***********************---------------------------

# 3))) Напишите программу, которая будет преобразовывать десятичное число в двоичное.

# Пример:

# - 45 -> 101101
# - 3 -> 11
# - 2 -> 10


# n=int(input('Введите число: '))
# b=''
# while n >0:
#     b=str(n%2)+b
#     n=n//2
# print(b)


# 4))Задайте список из вещественных чисел. Напишите программу, которая найдёт разницу между максимальным и минимальным значением дробной части элементов.

# Пример:

# - [1.1, 1.2, 3.1, 5, 10.01] => 0.19

# x = [1.1, 1.2, 3.1, 5, 10.01]
# mylist2=[int((i*100)%100)for i in x if int((i*100)%100)>0]

# print(max(mylist2)-min(mylist2))
# print(max(x))
# print(min(x))


# *********************-----------------/////////////////////////////////////////////+++++++++++++++++++++++++++++++++++

# Задайте число. Составьте список чисел Фибоначчи, в том числе для отрицательных индексов.

# Пример:

# - для k = 8 список будет выглядеть так: [-21 ,13, -8, 5, −3, 2, −1, 1, 0, 1, 1, 2, 3, 5, 8, 13, 21] [Негафибоначчи]


# from itertools import count

# n=int(input('Введите число: '))
# def fibo(n) -> list:
#     if n == 0:
#         return [0]
#     elif n == 1:
#         return [0, 1]
#     elif n == 2:
#         return [0, 1, 1]

#     count = fibo(n-1)
#     count.append(count[-1] + count[-2])
#     return count


# def rec_fibo(n):
#     fib_list = fibo(n)
#     negative_list = []
#     for i in range(1, len(fib_list)):
#         if i % 2 == 0:
#             negative_list.append(fib_list[i] * -1)
#         else:
#             negative_list.append(fib_list[i])
#     return negative_list[::-1] + fib_list
# print(rec_fibo(n))
